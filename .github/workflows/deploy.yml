name: CI/CD Deploy Django to EC2

on:
  push:
    branches:
      - master  # Change this to your main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "StrictHostKeyChecking no" >> ~/.ssh/config

      - name: Deploy to EC2
        run: |
          # Sync files to EC2 instance
          rsync -avz --delete --exclude='.git' ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ secrets.DEPLOY_PATH }}

          # SSH into EC2 instance and setup the environment
          ssh ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            cd ${{ secrets.DEPLOY_PATH }}
            VIRTUAL_ENV=venv
            # Create a virtual environment if it doesn't exist
            if [ ! -d "$VIRTUAL_ENV" ]; then
              python3 -m venv "$VIRTUAL_ENV"
            fi

            # Activate the virtual environment and install dependencies
            source "$VIRTUAL_ENV/bin/activate"
            pip install -r requirements.txt

            # Run database migrations
            python manage.py migrate

            # Collect static files
            python manage.py collectstatic --noinput

            # Restart the Django application (using runserver)
            pkill -f "runserver"  # Kill existing runserver processes
            nohup python manage.py runserver 0.0.0.0:8000 &
          EOF
